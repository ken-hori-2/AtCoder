**********
Epoch 1900/5000, Val Loss(average): 0.06717992987897661
正解率: 100.0
**********
Epoch 2000/5000, Train Loss(average): 0.057241587299763017
正解率: 91.66666666666666
**********
Epoch 2000/5000, Val Loss(average): 0.04922629313336478
正解率: 100.0
**********
Epoch 2100/5000, Train Loss(average): 0.07213683650156276
正解率: 86.11111111111111
**********
Epoch 2100/5000, Val Loss(average): 0.06086573170291053
正解率: 100.0
**********
Epoch 2200/5000, Train Loss(average): 0.07185385514619863
正解率: 88.88888888888889
**********
Epoch 2200/5000, Val Loss(average): 0.07372557785775927
正解率: 77.77777777777779
**********
Epoch 2300/5000, Train Loss(average): 0.08463161361093323
正解率: 88.88888888888889
**********
Epoch 2300/5000, Val Loss(average): 0.1457268628809187
正解率: 77.77777777777779
**********
Epoch 2400/5000, Train Loss(average): 0.06759794801473618
正解率: 86.11111111111111
**********
Epoch 2400/5000, Val Loss(average): 0.0396803037987815
正解率: 100.0
**********
Epoch 2500/5000, Train Loss(average): 0.06938064746403445
正解率: 83.33333333333334
**********
Epoch 2500/5000, Val Loss(average): 0.04575030422872967
正解率: 100.0
**********
Early stopping
*************************************************************************************************************
予測結果  : tensor([3])
正解ラベル: tensor([3])
*************************************************************************************************************



#####
TEST
#####
*****
in: tensor([[600.,   0.]])
*****
in [:, 0]: tensor([600.])
in [:, 0]: tensor([0.5000])
*****
行動状態をone-hotベクトル化 ... STABLE:[1,0,0], WALKING:[0,1,0], RUNNING:[0,0,1]
state:  tensor([[1., 0., 0.]])
test inputs: tensor([[0.5000, 1.0000, 0.0000, 0.0000]])
probabilities: tensor([[1.1971e-01, 8.8013e-01, 1.5055e-05, 1.2846e-04, 9.7097e-06, 7.0722e-06,
         1.8366e-07]], grad_fn=<SoftmaxBackward0>)
predict classes: tensor([1])
Predict:  ['会議情報']